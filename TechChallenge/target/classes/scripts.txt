-- Database: TechChallenge

-- DROP DATABASE IF EXISTS "TechChallenge";

CREATE DATABASE "TechChallenge"
    WITH
    OWNER = postgres
    ENCODING = 'UTF8'
    LC_COLLATE = 'English_Philippines.932'
    LC_CTYPE = 'English_Philippines.932'
    LOCALE_PROVIDER = 'libc'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1
    IS_TEMPLATE = False;
    
-- Table: public.accounts

-- DROP TABLE IF EXISTS public.accounts;

CREATE TABLE IF NOT EXISTS public.accounts
(
    account_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    first_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    email character varying(50) COLLATE pg_catalog."default" NOT NULL,
    password character varying(100) COLLATE pg_catalog."default" NOT NULL,
    role integer NOT NULL,
    created_at date,
    updated_at date,
    CONSTRAINT accounts_pkey PRIMARY KEY (account_id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.accounts
    OWNER to postgres;
    
-- Table: public.inventory

-- DROP TABLE IF EXISTS public.inventory;

CREATE TABLE IF NOT EXISTS public.inventory
(
    item_number integer NOT NULL DEFAULT nextval('inventory_item_number_seq'::regclass),
    item_description character varying(50) COLLATE pg_catalog."default" NOT NULL,
    item_quantity integer NOT NULL,
    item_date_added date NOT NULL,
    item_date_update date NOT NULL,
    CONSTRAINT inventory_pkey PRIMARY KEY (item_number)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.inventory
    OWNER to postgres;

-- Table: public.orders

-- DROP TABLE IF EXISTS public.orders;

CREATE TABLE IF NOT EXISTS public.orders
(
    order_number integer NOT NULL DEFAULT nextval('orders_order_number_seq'::regclass),
    order_tracking_number character varying(50) COLLATE pg_catalog."default" NOT NULL,
    order_item_number character varying(50) COLLATE pg_catalog."default" NOT NULL,
    order_item_quantity integer NOT NULL,
    order_date date NOT NULL,
    order_update_date date NOT NULL,
    order_comment character varying(100) COLLATE pg_catalog."default",
    order_status character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT orders_pkey PRIMARY KEY (order_number)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.orders
    OWNER to postgres;
    
-- Table: public.roles

-- DROP TABLE IF EXISTS public.roles;

CREATE TABLE IF NOT EXISTS public.roles
(
    role_id integer NOT NULL,
    role_description character varying(100) COLLATE pg_catalog."default" NOT NULL
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.roles
    OWNER to postgres;
    
    
-- Table: public.shipping

-- DROP TABLE IF EXISTS public.shipping;

CREATE TABLE IF NOT EXISTS public.shipping
(
    shipping_number integer NOT NULL DEFAULT nextval('shipping_shipping_number_seq'::regclass),
    shipping_tracking_number character varying(50) COLLATE pg_catalog."default" NOT NULL,
    shipping_date date NOT NULL,
    shipping_update_date date NOT NULL,
    shipping_comment character varying(100) COLLATE pg_catalog."default",
    shipping_status character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT shipping_pkey PRIMARY KEY (shipping_number)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.shipping
    OWNER to postgres;    

